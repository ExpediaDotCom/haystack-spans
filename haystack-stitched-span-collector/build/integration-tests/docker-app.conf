akka {
  kafka.consumer {
    wakeup-timeout = 2s
    max-wakeups = 3

    kafka-clients {
      bootstrap.servers = "kafkasvc:9092"
      group.id = "stitched-span-collector"
    }
  }
}

collector {
  topic = "stitch-spans"
  write.batch {
    size = 5
    timeout.ms = 500
  }
  parallelism = 1
  commit.batch.size = 50
}

cassandra {
  endpoints: "cassandra"
  keyspace: {
    auto.create.schema = "CREATE KEYSPACE IF NOT EXISTS haystack WITH REPLICATION = { 'class': 'SimpleStrategy', 'replication_factor' : 1} AND durable_writes = false;\n\nuse haystack;\n\nCREATE TABLE traces (\nid varchar,\nts timestamp,\nstitchedspans blob,\nPRIMARY KEY ((id), ts)\n) WITH CLUSTERING ORDER BY (ts ASC);\n\nALTER TABLE traces WITH compaction = { 'class' :  'DateTieredCompactionStrategy'  };"
    name: "haystack"
    table.name: "traces"
  }
}

elasticsearch {
  endpoint = "http://elasticsearch:9200"
  index {
    template.json = "{\"template\": \"haystack-traces*\",\"settings\": {\"number_of_shards\": 1},\"mappings\": {\"spans\": {\"_source\": {\"enabled\": false},\"properties\": {\"spans\": {\"type\": \"nested\"}}}}}"
    name.prefix = "haystack-traces"
    type = "spans"
  }
}

reload {
  tables {
    index.fields.config = "indexing-fields"
  }
  config {
    endpoint = "http://elasticsearch:9200"
    database.name = "reload-configs"
  }
  interval.ms = 5000
}